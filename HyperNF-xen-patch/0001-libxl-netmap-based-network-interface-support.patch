From 21dea6e50569451a0657b8a2620c86e87701ea7c Mon Sep 17 00:00:00 2001
From: Kenichi Yasukata <kenichi.yasukata@neclab.eu>
Date: Mon, 7 Aug 2017 09:37:19 +0100
Subject: [PATCH 1/7] libxl: netmap based network interface support

---
 tools/libxl/libxl_linux.c            | 12 ++++++++++++
 tools/libxl/libxl_nic.c              |  8 +++++++-
 tools/libxl/libxl_types.idl          |  1 +
 tools/libxl/libxl_types_internal.idl |  1 +
 tools/libxl/xl_cmdimpl.c             |  2 ++
 xen/Rules.mk                         |  3 +++
 6 files changed, 26 insertions(+), 1 deletion(-)

diff --git a/tools/libxl/libxl_linux.c b/tools/libxl/libxl_linux.c
index 0033a0e..143befa 100644
--- a/tools/libxl/libxl_linux.c
+++ b/tools/libxl/libxl_linux.c
@@ -82,6 +82,12 @@ static char **get_hotplug_env(libxl__gc *gc,
                                                     dev->devid,
                                                     LIBXL_NIC_TYPE_VIF);
             break;
+        case LIBXL_NIC_TYPE_NMIF:
+            env[nr++] = "nmif";
+            env[nr++] = (char *) libxl__device_nic_devname(gc, dev->domid,
+                                                    dev->devid,
+                                                    LIBXL_NIC_TYPE_VIF);
+            break;
         default:
             return NULL;
         }
@@ -137,6 +143,11 @@ static int libxl__hotplug_nic(libxl__gc *gc, libxl__device *dev,
         (*args)[nr++] = (char *) libxl__device_action_to_string(action);
         (*args)[nr++] = "type_if=tap";
         (*args)[nr++] = NULL;
+    } else if (nictype == LIBXL_NIC_TYPE_NMIF && num_exec) {
+        (*args)[nr++] = action == LIBXL__DEVICE_ACTION_ADD ? "online" :
+                                                             "offline";
+        (*args)[nr++] = "type_if=nmif";
+        (*args)[nr++] = NULL;
     } else {
         (*args)[nr++] = action == LIBXL__DEVICE_ACTION_ADD ? "online" :
                                                              "offline";
@@ -203,6 +214,7 @@ int libxl__get_hotplug_script_info(libxl__gc *gc, libxl__device *dev,
         }
         rc = libxl__hotplug_disk(gc, dev, args, env, action);
         break;
+    case LIBXL__DEVICE_KIND_NMIF:
     case LIBXL__DEVICE_KIND_VIF:
         /*
          * If domain has a stubdom we don't have to execute hotplug scripts
diff --git a/tools/libxl/libxl_nic.c b/tools/libxl/libxl_nic.c
index 220a028..560b9d8 100644
--- a/tools/libxl/libxl_nic.c
+++ b/tools/libxl/libxl_nic.c
@@ -103,7 +103,8 @@ int libxl__device_nic_setdefault(libxl__gc *gc, libxl_device_nic *nic,
         if (nic->nictype == LIBXL_NIC_TYPE_VIF_IOEMU) {
             LOG(ERROR, "trying to create PV guest with an emulated interface");
             return ERROR_INVAL;
-        }
+        } else if (nic->nictype == LIBXL_NIC_TYPE_NMIF)
+            break;
         nic->nictype = LIBXL_NIC_TYPE_VIF;
         break;
     case LIBXL_DOMAIN_TYPE_INVALID:
@@ -174,6 +175,11 @@ static void libxl__device_nic_add(libxl__egc *egc, uint32_t domid,
     rc = libxl__device_from_nic(gc, domid, nic, device);
     if ( rc != 0 ) goto out;
 
+    if (nic->nictype == LIBXL_NIC_TYPE_NMIF) {
+        device->backend_kind     = LIBXL__DEVICE_KIND_NMIF;
+        device->kind             = LIBXL__DEVICE_KIND_NMIF;
+    }
+
     flexarray_append(back, "frontend-id");
     flexarray_append(back, GCSPRINTF("%d", domid));
     flexarray_append(back, "online");
diff --git a/tools/libxl/libxl_types.idl b/tools/libxl/libxl_types.idl
index a32c751..7ce1bd6 100644
--- a/tools/libxl/libxl_types.idl
+++ b/tools/libxl/libxl_types.idl
@@ -127,6 +127,7 @@ libxl_nic_type = Enumeration("nic_type", [
     (0, "UNKNOWN"),
     (1, "VIF_IOEMU"),
     (2, "VIF"),
+    (3, "NMIF"),
     ])
 
 libxl_action_on_shutdown = Enumeration("action_on_shutdown", [
diff --git a/tools/libxl/libxl_types_internal.idl b/tools/libxl/libxl_types_internal.idl
index 82e5c07..34eaafd 100644
--- a/tools/libxl/libxl_types_internal.idl
+++ b/tools/libxl/libxl_types_internal.idl
@@ -25,6 +25,7 @@ libxl__device_kind = Enumeration("device_kind", [
     (8, "VTPM"),
     (9, "VUSB"),
     (10, "QUSB"),
+    (11, "NMIF"),
     ])
 
 libxl__console_backend = Enumeration("console_backend", [
diff --git a/tools/libxl/xl_cmdimpl.c b/tools/libxl/xl_cmdimpl.c
index 7e8a8ae..752d1e4 100644
--- a/tools/libxl/xl_cmdimpl.c
+++ b/tools/libxl/xl_cmdimpl.c
@@ -1021,6 +1021,8 @@ static int parse_nic_config(libxl_device_nic *nic, XLU_Config **config, char *to
     if (MATCH_OPTION("type", token, oparg)) {
         if (!strcmp("vif", oparg)) {
             nic->nictype = LIBXL_NIC_TYPE_VIF;
+	} else if (!strcmp("nmif", oparg)) {
+            nic->nictype = LIBXL_NIC_TYPE_NMIF;
         } else if (!strcmp("ioemu", oparg)) {
             nic->nictype = LIBXL_NIC_TYPE_VIF_IOEMU;
         } else {
diff --git a/xen/Rules.mk b/xen/Rules.mk
index 08cc776..0f2658d 100644
--- a/xen/Rules.mk
+++ b/xen/Rules.mk
@@ -57,6 +57,9 @@ CFLAGS += -Werror -Wredundant-decls -Wno-pointer-arith
 CFLAGS += -pipe -g -D__XEN__ -include $(BASEDIR)/include/xen/config.h
 CFLAGS += '-D__OBJECT_FILE__="$@"'
 
+NETMAP_SRC ?= $(realpath ../netmap)
+CFLAGS += -I$(NETMAP_SRC)/sys -I$(NETMAP_SRC)/LINUX
+
 ifneq ($(clang),y)
 # Clang doesn't understand this command line argument, and doesn't appear to
 # have an suitable alternative.  The resulting compiled binary does function,
-- 
2.7.4

